repeat task.wait() until game:IsLoaded()

if getgenv().Connection then
    for i,v in next, getgenv().Connection do
        v:Disconnect()
    end
end

local RS = game:GetService("RunService")
local Player = game:GetService("Players")
local UIS = game:GetService("UserInputService")

local Lplayer = Player.LocalPlayer
local Character = Lplayer.Character

getgenv().Config = {}

getgenv().Connection = {}


local Funcs = {}

local Values = {
    WalkSpeed = 16,
    SilentKillRange = 10,
}

function Funcs.SilentKill(Bool)
    getgenv().Config.SilentKill = Bool
    if getgenv().Connection.SilentKill then getgenv().Connection.SilentKill:Disconnect() end
    local function GetPlayer()
        for _,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v ~= game.Players.LocalPlayer then
                if v.Team ~= game.Players.LocalPlayer.Team then
                    if v.Character ~= nil then
                        if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                            if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                                local Distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Character.HumanoidRootPart.Position).Magnitude
                                if Distance < Values.SilentKillRange then
                                    return v.Character
                                end
                            end
                        end
                    end
                else
                    if v.Character ~= nil then
                        if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                            if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                                local Distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Character.HumanoidRootPart.Position).Magnitude
                                if Distance < Values.SilentKillRange then
                                    return v.Character
                                end
                            end
                        end
                    end
                end
            end
        end
        return
    end
    if getgenv().Config.SilentKill then
        getgenv().Connection.SilentKill = RS.Heartbeat:Connect(function(deltaTime)
            local target = GetPlayer()
            if target then
                game.ReplicatedStorage.Events.SwingTool:FireServer({target})
            end
        end)
    end
end

function Funcs.SilentEnities(Bool)
    getgenv().Config.SilentEnities = Bool
    if getgenv().Connection.SilentEnities then getgenv().Connection.SilentEnities:Disconnect() end
    local function clearPartsAroundPlayer(player)
        local function getPartsInSphere(center, radius)
            local partsInSphere = {}
    
            local regionSize = Vector3.new(radius, radius, radius)
            local region = Region3.new(center - regionSize, center + regionSize)
    
            local partsInRegion = workspace:FindPartsInRegion3(region, nil, math.huge)
    
            for _, part in pairs(partsInRegion) do
                if part:IsA("BasePart") and (part.Position - center).Magnitude <= radius then
                    if part.Parent:FindFirstChild("Health") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
                        table.insert(partsInSphere, part.Parent)
                    end
                end
            end
            return partsInSphere
        end
        local character = player.Character
        local target = nil
        if character and character:FindFirstChild("HumanoidRootPart") then
            local playerPos = character.HumanoidRootPart.Position
            local partsToClear = getPartsInSphere(playerPos, 30)
            target = partsToClear
        end
        return target
    end
    if getgenv().Config.SilentEnities then
        getgenv().Connection.SilentEnities = RS.Heartbeat:Connect(function(deltaTime)
            local target =  clearPartsAroundPlayer(game.Players.LocalPlayer)
            if #target > 0  then
                game.ReplicatedStorage.Events.SwingTool:FireServer(target)
            end
        end)
    end
end

function Funcs.WalkSpeed(Value,Bool)
    getgenv().Config.WalkSpeed = Bool
    if not getgenv().Config.WalkSpeed and getgenv().WalkSpeed then getgenv().WalkSpeed:Disconnect() end
    if getgenv().WalkSpeed then getgenv().WalkSpeed:Disconnect() end

    if getgenv().Config.WalkSpeed then
        getgenv().WalkSpeed = game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"):Connect(function()
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Values.WalkSpeed
        end)
    
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Values.WalkSpeed
    end
end

function Funcs.UpSpeed(Value)
    Values.WalkSpeed = Value
    Funcs.WalkSpeed(Values.WalkSpeed, getgenv().Config.WalkSpeed)
end


local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Univers", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest",IntroEnabled = false})
local Main = Window:MakeTab({Name = "Main",Icon = "rbxassetid://4483345998",PremiumOnly = false})
local Lplayer = Window:MakeTab({Name = "Main",Icon = "rbxassetid://4483345998",PremiumOnly = false})

local Section = Main:AddSection({Name = "Main"})

Main:AddToggle({Name = "Slient Kill",Default = false,Callback = function(Value)
    Funcs.SilentKill(Value)
end})


Main:AddToggle({Name = "Slient Enities",Default = false,Callback = function(Value)
    Funcs.SilentEnities(Value)
end})

Lplayer:AddSlider({Name = "WalkSpeed",Min = 16,Max = 100,Default = 30,Color = Color3.fromRGB(255,255,255),Increment = 1,ValueName = "",Callback = function(Value)
    Funcs.UpSpeed(Value)
end})

Lplayer:AddToggle({Name = "WalkSpeed",Default = false,Callback = function(Value)
    getgenv().sPEED = Value
    if not sPEED and getgenv().WalkSpeed then getgenv().WalkSpeed:Disconnect() end
    while sPEED and task.wait(.1) do
        spawn(function()
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                Funcs.WalkSpeed(30,Value)
            end
        end)
    end
end})

game.Players.LocalPlayer.character.Humanoid.MaxSlopeAngle = 99
